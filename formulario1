<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Pública Auditores</title>
    <link rel="icon" type="image/png" href="PPS.png">
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <style>
        html { scroll-behavior: smooth; }
        body { background-color: #f9fafb; }
        .file-item { display: flex; align-items: center; justify-content: space-between; padding: 0.5rem; border-radius: 0.5rem; background-color: #fff; border: 1px solid #e5e7eb; margin-top: 0.5rem; }
        .progress-bar-container { width: 100%; background-color: #e5e7eb; border-radius: 0.5rem; overflow: hidden; height: 8px; }
        .progress-bar { background-color: #DC2626; height: 100%; width: 0%; transition: width 0.3s ease-in-out; }
        .btn { background-color: #ffffff; color: #111827; border: 2px solid #1f2937; font-weight: bold; padding: 0.15rem 1rem; border-radius: 0.5rem; transition: all 0.2s ease-in-out; text-align: center; }
        .btn:hover:not(:disabled) { background-color: #111827; color: #ffffff; }
        .btn:disabled { opacity: 0.5; cursor: not-allowed; }
        .btn-delete { background: none; border: none; padding: 0.25rem; color: #9ca3af; visibility: hidden; }
        .btn-delete:hover:not(:disabled) { color: #DC2626; }
        .btn-cancel { background-color: #FEE2E2; color: #B91C1C; border: 1px solid #FCA5A5; font-size: 0.75rem; padding: 0.125rem 0.5rem; border-radius: 9999px; }
        .btn-cancel:hover { background-color: #FCA5A5; }
        .et-loader { position: fixed; top: 0; left: 0; width: 100vw; height: 100vh; background-color: rgba(255, 255, 255, 0.3); z-index: 999999; display: flex; justify-content: center; align-items: center; opacity: 1; transition: opacity 0.01s ease; }
        .et-loader-img { width: 100px; height: auto; }
        .loader-hidden { opacity: 0; pointer-events: none; }
        details > summary { list-style: none; }
        details > summary::-webkit-details-marker { display: none; }
        details[open] > summary svg { transform: rotate(180deg); }
        summary svg { transition: transform 0.2s; }
		.drop-zone { border: 2px dashed #e5e7eb; border-radius: 0.95rem; padding: 1rem; text-align: center; color: #6b7280; transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out; } 
		.drop-zone.drag-over {  background-color: #EFF6FF; border-color: #2563eb; }

    </style>
</head>
<body class="font-sans">

    <div id="preloader" class="et-loader loader-hidden"><img class="et-loader-img" src="PPT.png" alt="et-loader"></div>
    <header class="bg-red-600 shadow-md w-full">
        <div class="container mx-auto max-w-7xl px-4 lg:px-8 flex justify-center items-center relative py-2"><div class="absolute left-4"><img src="PP.png" alt="Logo" class="h-10" onerror="this.style.display='none'"></div><h1 class="text-lg sm:text-2xl font-bold text-white text-center w-full lg:pl-28 sm:pl-0">Formulario de Auditoría</h1></div>
    </header>

    <div class="container mx-auto max-w-7xl p-4 sm:p-6 lg:p-8 lg:flex lg:gap-8">
        
        <aside class="hidden lg:block lg:w-1/5">
            <div class="sticky top-8 bg-gray-100 p-6 rounded-lg border">
                <h3 class="font-bold text-lg text-gray-800">Guía Rápida</h3>
                <p class="text-sm text-gray-600 mt-2 border-t pt-2">
                    <strong class="block">Proceso de Carga y Gestión</strong>
                    El sistema soporta la selección múltiple de archivos por categoría. Es posible abortar una transferencia en curso mediante el botón "Cancelar". Una vez finalizada la carga, cada archivo puede ser eliminado individualmente mediante el icono (X).
                </p>
                <p class="text-sm text-gray-600 mt-4 border-t pt-2">
                    <strong class="block">Integridad y Trazabilidad</strong>
                    El justificante final en formato PDF incluye la marca de tiempo del envío, documentación enviada y la firma digital única (hash SHA-256) por cada archivo, garantizando la integridad de los datos remitidos.
                </p>
            </div>
        </aside>
        <main class="lg:w-4/5">
            <div class="lg:hidden mb-6">
                 <button id="toggle-guide-btn" onclick="toggleGuide()" class="w-full font-semibold text-gray-700 bg-gray-200 p-3 rounded-lg flex justify-between items-center">
                    <div class="flex-grow text-center"><span>Mostrar Guía</span></div>
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path></svg>
                 </button>
                 <div id="mobile-guide" class="hidden bg-gray-100 p-4 rounded-b-lg border-x border-b">
                    <h3 class="font-bold text-lg text-gray-800">Ayuda</h3>
                    <h4 class="font-semibold text-md text-gray-700 mt-4">Guía Rápida</h4>
                    <p class="text-sm text-gray-600 mt-2 border-t pt-2">
                        <strong class="block">Proceso de Carga y Gestión</strong>
                        El sistema soporta la selección múltiple de archivos por categoría. Es posible abortar una transferencia en curso mediante el botón "Cancelar". Una vez finalizada la carga, cada archivo puede ser eliminado individualmente mediante el icono (X).
                    </p>
                    <p class="text-sm text-gray-600 mt-4 border-t pt-2">
                        <strong class="block">Integridad y Trazabilidad</strong>
                        El justificante final en formato PDF incluye la marca de tiempo del envío, documentación enviada y la firma digital única (hash SHA-256) por cada archivo, garantizando la integridad de los datos remitidos.
                    </p>
                 </div>
            </div>
            <p class="text-center text-gray-600 mb-8"><strong>Gestión Pública Auditora</strong> es una firma de servicios profesionales de auditoría que brinda una oferta de servicios basados en la calidad, la experiencia y la continua colaboración con el cliente que, unido a un profundo conocimiento sectorial de nuestra provincia, hace posible generar un valor añadido a las organizaciones a las que prestamos nuestros servicios.</p>
            <div class="bg-white p-8 rounded-2xl shadow-lg border">
                <div id="form-section">
                    <div class="mb-6"><label for="nif" class="block text-sm font-medium text-gray-700 mb-1">NIF/CIF (Obligatorio)</label><p class="text-xs text-gray-400 mb-2">Introduzca el NIF/CIF y pulse "Cargar Cuestionario" para continuar.</p><div class="flex items-center gap-2"><input type="text" id="nif" name="nif" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-red-500 focus:border-red-500" placeholder="Ej: 12345678A" oninput="document.getElementById('load-form-button').disabled = this.value.trim() === ''"><button id="load-form-button" onclick="loadForm()" class="btn" disabled>Cargar Cuestionario</button></div><p id="nif-error" class="text-red-500 text-xs mt-1 hidden">El campo NIF es obligatorio.</p></div>
                    <div id="dynamic-form-content" class="hidden">
                        <div id="dynamic-fields-container" class="space-y-4"></div>
                        <div class="mb-8 mt-8"><label for="observaciones" class="block text-sm font-medium text-gray-700">Observaciones/comentario (Opcional)</label><p class="text-xs text-gray-400 mb-2">Añada cualquier información adicional que considere relevante.</p><textarea id="observaciones" rows="4" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-red-500 focus:border-red-500"></textarea></div>
                        <div class="border-t pt-6">
                            <div class="mb-4"><div class="flex items-start"><input type="checkbox" id="privacy-policy" onchange="updateSummaryButtonState()" class="h-4 w-4 text-red-600 border-gray-300 rounded focus:ring-red-500 mt-1"><label for="privacy-policy" class="ml-2 block text-sm text-gray-900">He leído y acepto la <a href="https://www.publicaauditores.es/politica-de-privacidad/" target="_blank" rel="noopener noreferrer" class="font-medium text-red-600 hover:underline">política de privacidad</a>.</label></div></div>
                            <button id="summary-button" onclick="showSummary()" class="w-full btn" disabled>Ver Resumen y Enviar</button>
                        </div>
                    </div>
                </div>
                <div id="summary-section" class="hidden mt-8 pt-8 border-t-2 border-dashed"><h2 class="text-xl font-bold text-gray-800 mb-4">Resumen de la Documentación a Enviar</h2><div id="summary-content" class="space-y-4"></div><div class="flex flex-col sm:flex-row gap-4 mt-8 pt-6"><button id="final-send-button" onclick="finalizeSubmission()" class="w-full btn flex items-center justify-center"><span id="send-button-text">Confirmar y Enviar</span></button></div><div id="final-progress-container" class="w-full hidden mt-4"><p class="text-sm text-center text-gray-600 mb-2">Procesando envío y generando justificante...</p><div class="w-full bg-gray-200 rounded-full h-2.5"><div id="final-progress-bar" class="bg-red-600 h-2.5 rounded-full" style="width: 0%; transition: width 1.5s ease-out;"></div></div></div></div>
                <div id="confirmation-section" class="hidden text-center mt-8 pt-8 border-t-2 border-dashed"><svg class="mx-auto h-16 w-16 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg><h2 class="text-2xl font-bold text-green-600 mt-4">¡Envío Completado!</h2><p class="text-gray-500 mt-2">Su solicitud ha sido recibida y el justificante se ha generado correctamente.</p><div id="confirmation-log" class="text-left bg-gray-50 p-4 rounded-lg text-sm text-gray-700 mt-6"></div><div class="mt-8"><button id="download-receipt-button" onclick="downloadReceipt()" class="w-full btn" disabled>Descargar Justificante (PDF)</button></div></div>
            </div>
        </main>
        </div>

    <footer class="text-center py-6 px-4"><a href="https://www.publicaauditores.es/" target="_blank" rel="noopener noreferrer" class="text-sm text-gray-500 hover:text-red-600 transition-colors">© 2025 Publica Auditores</a><span class="text-sm text-gray-400 mx-2">|</span><a href="https://www.publicaauditores.es/conozcanos/" target="_blank" rel="noopener noreferrer" class="text-sm text-red-600 hover:text-red-700 transition-colors">Conózcanos</a></footer>

    <script>
        const SCRIPT_URL = 'https://script.google.com/macros/s/AKfycbyZh9hHxnO1Ge2fhrWHdcRgKSvOnOCy6lD5gG2sDBdfmx_nDmm3ytBQLWpZqKCrd76w/exec';
        let submissionData = { nif: '', files: {}, observaciones: '', submissionTimestamp: '' };
        let uploadsInProgress = 0;
        let generatedPdfDoc = null; 
        let idToTitleMap = {};
        
        function toggleGuide() {
            const guide = document.getElementById('mobile-guide');
            const btn = document.getElementById('toggle-guide-btn');
            const svg = btn.querySelector('svg');
            const isHidden = guide.classList.toggle('hidden');
            
            if (isHidden) {
                btn.querySelector('span').textContent = 'Mostrar Guía';
                svg.style.transform = 'rotate(0deg)';
            } else {
                btn.querySelector('span').textContent = 'Ocultar Guía';
                svg.style.transform = 'rotate(180deg)';
            }
        }

        function loadForm() {
            const nif = document.getElementById('nif').value.trim();
            if (!nif) { document.getElementById('nif-error').classList.remove('hidden'); return; }
            document.getElementById('nif-error').classList.add('hidden');
            const loadButton = document.getElementById('load-form-button');
            loadButton.textContent = 'Cargando...';
            loadButton.disabled = true;
            document.getElementById('preloader').classList.remove('loader-hidden');

            fetch(SCRIPT_URL, { method: 'POST', body: JSON.stringify({type: 'getFormConfigForNif', nif: nif})})
            .then(res => res.json())
            .then(response => {
                if (response.status === 'success') {
                    if (Object.keys(response.data).length === 0) {
                        alert("No hay requerimientos pendientes para este NIF o el NIF no está registrado. Por favor, contacte con el administrador.");
                        loadButton.textContent = 'Cargar Cuestionario';
                        loadButton.disabled = false;
                        return;
                    }
                    buildFormFields(response.data);
                    document.getElementById('dynamic-form-content').classList.remove('hidden');
                    document.getElementById('nif').disabled = true;
                    loadButton.classList.add('hidden');
                } else { throw new Error(response.message); }
            }).catch(err => {
                alert(`Error al cargar la configuración: ${err.message}`);
                loadButton.textContent = 'Cargar Cuestionario';
                loadButton.disabled = false;
            }).finally(() => {
                document.getElementById('preloader').classList.add('loader-hidden');
            });
        }
        
        function buildFormFields(config) {
            const container = document.getElementById('dynamic-fields-container');
            container.innerHTML = '';
            submissionData.files = {};
            idToTitleMap = {};

            for (const areaName in config) {
                const areaDetails = document.createElement('details');
                areaDetails.className = 'bg-gray-50 rounded-lg p-4';
                areaDetails.open = true;
                const areaSummary = document.createElement('summary');
                areaSummary.className = 'font-bold text-lg cursor-pointer flex items-center justify-between';
                areaSummary.innerHTML = `<span>${areaName}</span><svg class="w-5 h-5 transition-transform transform" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path></svg>`;
                areaDetails.appendChild(areaSummary);
                const areaContent = document.createElement('div');
                areaContent.className = 'mt-2 pt-2 border-t border-gray-200';
                
                for (const subareaName in config[areaName]) {
                    const subareaDetails = document.createElement('details');
                    subareaDetails.className = 'mt-4 ml-4 pl-4 border-l-2 border-gray-200';
                    subareaDetails.open = true;
                    const subareaSummary = document.createElement('summary');
                    subareaSummary.className = 'font-semibold text-md cursor-pointer flex items-center justify-between';
                    subareaSummary.innerHTML = `<span>${subareaName}</span><svg class="w-4 h-4 ml-2 transition-transform transform" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path></svg>`;
                    subareaDetails.appendChild(subareaSummary);
                    const questionsContainer = document.createElement('div');
                    questionsContainer.className = 'mt-2 pl-2';
                    
                    const questions = config[areaName][subareaName];
                    if (Array.isArray(questions)) {
                        questions.forEach(field => {
                            submissionData.files[field.id] = [];
                            idToTitleMap[field.id] = {area: areaName, subarea: subareaName, titulo: field.titulo};
                            
                            const fieldDiv = document.createElement('div');
                            fieldDiv.className = 'mb-6';
                            
                            let adminFileHtml = '';
                            if (field.adminFile && Array.isArray(field.adminFile) && field.adminFile.length > 0) {
                                const fileLinks = field.adminFile.map(file => 
                                    `<div class="flex items-center justify-between bg-white p-2 rounded-md mt-2 shadow-sm border">
                                        <span class="text-gray-800 font-medium truncate pr-2">${file.name}</span>
                                        <a href="${file.url}" target="_blank" class="bg-red-600 text-white font-bold py-1 px-4 rounded hover:bg-red-700 flex-shrink-0 text-sm no-underline" style="text-decoration: none;">Descargar</a>
                                    </div>`
                                ).join('');

                                adminFileHtml = `
                                    <div class="bg-blue-50 p-3 rounded-lg border border-blue-200 mb-3">
                                        <p class="text-sm font-medium text-blue-800">Documento(s) de ayuda proporcionado(s):</p>
                                        <div class="space-y-1 mt-1">${fileLinks}</div>
                                    </div>
                                `;
                            }

                            fieldDiv.innerHTML = `
								${adminFileHtml}
								<p class="text-sm text-gray-600 mb-2">${field.descripcion}</p>
    
								<div id="drop-zone-${field.id}" class="drop-zone mt-2">
									<p class="text-gray-500">Arrastra y suelta los archivos aquí</p>
									<p class="text-gray-400 text-sm my-2">o</p>
									<button type="button" onclick="document.getElementById('${field.id}-input').click()" class="btn mt-2 lg:mt-0">+ Seleccionar Archivo(s)</button>
									<input type="file" id="${field.id}-input" multiple class="hidden" onchange="handleFileSelect(event, '${field.id}')">
								</div>
								<div id="${field.id}-list" class="mt-4"></div>
							`;
                            questionsContainer.appendChild(fieldDiv);
							const dropZone = fieldDiv.querySelector(`#drop-zone-${field.id}`);

							if (dropZone) {
							  ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
							    dropZone.addEventListener(eventName, (e) => {
									e.preventDefault();
									e.stopPropagation();
								}, false);
							   });

							['dragenter', 'dragover'].forEach(eventName => {
 							 dropZone.addEventListener(eventName, () => {
 							   dropZone.classList.add('drag-over');
 							 }, false);
							});

							['dragleave', 'drop'].forEach(eventName => {
							  dropZone.addEventListener(eventName, () => {
 							   dropZone.classList.remove('drag-over');
 							 }, false);
							});

							dropZone.addEventListener('drop', (e) => {
							  const files = e.dataTransfer.files;
 							 if (files.length) {
  							  for (const file of files) {
 							     uploadFileToTemp(file, field.id);
 							   }
 							 }
							}, false);
							}
                        });
                    }
                    subareaDetails.appendChild(questionsContainer);
                    areaContent.appendChild(subareaDetails);
                }
                areaDetails.appendChild(areaContent);
                container.appendChild(areaDetails);
            }
        }
        
        function formatBytes(bytes, decimals=2) { if(bytes===0)return'0 Bytes';const k=1024;const dm=decimals<0?0:decimals;const sizes=['Bytes','KB','MB','GB','TB'];const i=Math.floor(Math.log(bytes)/Math.log(k));return parseFloat((bytes/Math.pow(k,i)).toFixed(dm))+' '+sizes[i];}
        async function calculateFileHash(file) {const buffer=await file.arrayBuffer();const hashBuffer=await crypto.subtle.digest('SHA-256',buffer);const hashArray=Array.from(new Uint8Array(hashBuffer));return hashArray.map(b=>b.toString(16).padStart(2,'0')).join('');}
        function updateSummaryButtonState() {const summaryButton=document.getElementById('summary-button');const hasFiles=Object.values(submissionData.files).some(arr=>arr.length>0);const privacyChecked=document.getElementById('privacy-policy').checked;summaryButton.disabled=uploadsInProgress>0||!hasFiles||!privacyChecked;}
        function handleFileSelect(event, fieldId){ for(const file of event.target.files){uploadFileToTemp(file, fieldId);} event.target.value='';}
        
        async function uploadFileToTemp(file, fieldId) {
            uploadsInProgress++;
            updateSummaryButtonState();
            const domId = `file-${Date.now()}-${Math.random()}`;
            const listContainer = document.getElementById(`${fieldId}-list`);
            const fileItem = document.createElement('div');
            fileItem.id = domId;
            fileItem.className = 'file-item';
            fileItem.innerHTML = `<div class="flex-grow mr-4 overflow-hidden"><div class="flex justify-between items-baseline"><p class="text-sm font-medium text-gray-800 truncate pr-2">${file.name}</p><span class="text-xs text-gray-500 flex-shrink-0">${formatBytes(file.size)}</span></div><div class="upload-status-container mt-1"><div class="progress-bar-container"><div class="progress-bar"></div></div><p class="status-text text-xs text-gray-400 mt-1">Preparando...</p></div></div><div class="flex flex-col items-center"><button class="btn-cancel">Cancelar</button><button class="btn-delete"><svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20"><path d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"/></svg></button></div>`;
            listContainer.appendChild(fileItem);
            
            const [uploadStatusContainer, progressBar, deleteButton, cancelButton, statusText] = [ fileItem.querySelector('.upload-status-container'), fileItem.querySelector('.progress-bar'), fileItem.querySelector('.btn-delete'), fileItem.querySelector('.btn-cancel'), fileItem.querySelector('.status-text') ];
            const xhr = new XMLHttpRequest();
            cancelButton.onclick = () => xhr.abort();

            try {
                statusText.textContent = 'Iniciando sesión...';
                const initPayload = { type: 'initiateUpload', nif: document.getElementById('nif').value.trim(), fileName: file.name, mimeType: file.type || 'application/octet-stream' };
                const initResponse = await fetch(SCRIPT_URL, { method: 'POST', body: JSON.stringify(initPayload) });
                const initResult = await initResponse.json();
                if (initResult.status !== 'success' || !initResult.data.uploadUrl) { throw new Error(initResult.message || 'No se pudo obtener la URL de subida.'); }
                
                const { uploadUrl } = initResult.data;
                xhr.upload.addEventListener('progress', e => { if (e.lengthComputable) { const percentComplete = (e.loaded / e.total) * 100; progressBar.style.width = percentComplete + '%'; statusText.textContent = `Subiendo... ${Math.round(percentComplete)}%`; } });
                xhr.addEventListener('loadend', async () => {
                    try {
                        statusText.textContent = 'Confirmando subida...';
                        const confirmPayload = { type: 'confirmUpload', nif: document.getElementById('nif').value.trim(), fileName: file.name };
                        const confirmResult = await fetch(SCRIPT_URL, { method: 'POST', body: JSON.stringify(confirmPayload) }).then(res => res.json());

                        if (confirmResult.status === 'success' && confirmResult.data.fileId) {
                            const fileIdFromServer = confirmResult.data.fileId;
                            statusText.textContent = 'Calculando hash...';
                            const hash = await calculateFileHash(file);
                            const fileData = { name: file.name, id: fileIdFromServer, hash: hash, domId: domId };
                            submissionData.files[fieldId].push(fileData);
                            uploadStatusContainer.innerHTML = `<div class="mt-1 text-xs text-green-600">Subido y verificado</div>`;
                            deleteButton.style.visibility = 'visible';
                            deleteButton.onclick = () => removeFile(fieldId, fileData);
                        } else { throw new Error(confirmResult.message || 'El servidor no pudo confirmar el archivo.'); }
                    } catch (error) {
                        uploadStatusContainer.innerHTML = `<p class="text-xs text-red-600 mt-1">Error: ${error.message}</p>`;
                    } finally {
                        uploadsInProgress--; updateSummaryButtonState(); cancelButton.classList.add('hidden');
                    }
                });
                xhr.open('PUT', uploadUrl, true);
                xhr.setRequestHeader('Content-Type', file.type || 'application/octet-stream');
                xhr.send(file);
            } catch (error) {
                uploadStatusContainer.innerHTML = `<p class="text-xs text-red-600 mt-1">Error: ${error.message}</p>`;
                cancelButton.classList.add('hidden');
                uploadsInProgress--;
                updateSummaryButtonState();
            }
        }

        function removeFile(fieldId, fileData) { const fileItem=document.getElementById(fileData.domId);if(!fileItem)return;fileItem.style.opacity='0.5';fileItem.querySelector('.btn-delete').disabled=true;uploadsInProgress++;updateSummaryButtonState();fetch(SCRIPT_URL,{method:'POST',body:JSON.stringify({type:'delete_temp',id:fileData.id})}).then(res=>res.json()).then(result=>{if(result.status==='success'){fileItem.remove();submissionData.files[fieldId]=submissionData.files[fieldId].filter(f=>f.id!==fileData.id);}else{alert('No se pudo borrar el archivo.');fileItem.style.opacity='1';fileItem.querySelector('.btn-delete').disabled=false;}}).catch(err=>{alert('Error de conexión al borrar.');fileItem.style.opacity='1';fileItem.querySelector('.btn-delete').disabled=false;}).finally(()=>{uploadsInProgress--;updateSummaryButtonState();});}
        function showSummary() { submissionData.nif=document.getElementById('nif').value.trim();if(!submissionData.nif){document.getElementById('nif-error').classList.remove('hidden');return;}const summarySection=document.getElementById('summary-section');const summaryContent=document.getElementById('summary-content');let summaryHTML=`<div><h3 class="font-bold text-gray-700">NIF/CIF:</h3><p class="pl-2">${submissionData.nif}</p></div>`;Object.keys(submissionData.files).forEach(fieldId=>{const files = submissionData.files[fieldId]; if(files.length>0){const titleInfo = idToTitleMap[fieldId]; const title = titleInfo ? `${titleInfo.area} > ${titleInfo.subarea}` : fieldId; summaryHTML+=`<div class="mt-4"><h3 class="font-bold text-gray-700">${title}:</h3><ul class="list-disc list-inside pl-2 text-gray-600">${files.map(f=>`<li>${f.name}</li>`).join('')}</ul></div>`;}});const observaciones = document.getElementById('observaciones').value.trim();if(observaciones){summaryHTML+=`<div class="mt-4"><h3 class="font-bold text-gray-700">Observaciones:</h3><p class="pl-2 whitespace-pre-wrap">${observaciones}</p></div>`;}summaryContent.innerHTML=summaryHTML;summarySection.classList.remove('hidden');summarySection.scrollIntoView();}
        function generateReceiptPdf(){const{jsPDF}=window.jspdf;const doc=new jsPDF();let y=20;const margin=15;const maxWidth=doc.internal.pageSize.getWidth()-(margin*2);doc.setFontSize(18);doc.text("Justificante de Envío",doc.internal.pageSize.getWidth()/2,y,{align:'center'});y+=15;doc.setFontSize(12);doc.text(`Fecha y Hora: ${new Date(submissionData.submissionTimestamp).toLocaleString('es-ES')}`,margin,y);y+=10;doc.text(`NIF/CIF: ${submissionData.nif}`,margin,y);y+=10;const observaciones=submissionData.observaciones;if(observaciones){doc.setFont(undefined,'bold');doc.text('Observaciones:',margin,y);y+=6;doc.setFont(undefined,'normal');const obsLines=doc.splitTextToSize(observaciones,maxWidth);doc.text(obsLines,margin,y);y+=obsLines.length*5+4;}y+=5;doc.setDrawColor(180);doc.line(margin,y,doc.internal.pageSize.getWidth()-margin,y);y+=10;doc.setFontSize(14);doc.text("Documentos Enviados:",margin,y);y+=8;function addFileList(fieldId,files){if(files.length>0){const titleInfo=idToTitleMap[fieldId];const title=titleInfo?`${titleInfo.area} > ${titleInfo.subarea}`:fieldId;doc.setFont(undefined,'bold');doc.setFontSize(11);doc.text(title,margin,y);y+=6;doc.setFont(undefined,'normal');files.forEach(file=>{doc.setFontSize(10);const lines=doc.splitTextToSize(`- ${file.name}`,maxWidth-4);if(y+((lines.length+1)*5)>280){doc.addPage();y=20;}doc.text(lines,margin+4,y);y+=(lines.length*5);doc.setFontSize(7);doc.setTextColor(128);doc.text(`Hash (SHA-256): ${file.hash}`,margin+4,y);y+=5;doc.setTextColor(0);});y+=4;}}Object.keys(submissionData.files).forEach(fieldId=>{addFileList(fieldId,submissionData.files[fieldId]);});return doc;}
        function finalizeSubmission() { const btn=document.getElementById('final-send-button');const progressContainer=document.getElementById('final-progress-container');const progressBar=document.getElementById('final-progress-bar');btn.classList.add('hidden');progressContainer.classList.remove('hidden');progressBar.style.width='20%';submissionData.submissionTimestamp=new Date().toISOString();submissionData.observaciones=document.getElementById('observaciones').value.trim();const pdfDoc=generateReceiptPdf();generatedPdfDoc=pdfDoc;submissionData.pdfBase64=pdfDoc.output('datauristring');progressBar.style.width='50%';const payload={type:'finalize',data:submissionData};fetch(SCRIPT_URL,{method:'POST',body:JSON.stringify(payload)}).then(res=>res.json()).then(result=>{if(result.status==='success'){progressBar.style.width='100%';setTimeout(()=>{progressContainer.classList.add('hidden');showConfirmationLog();document.getElementById('confirmation-section').classList.remove('hidden');document.getElementById('download-receipt-button').disabled=false;document.getElementById('confirmation-section').scrollIntoView();},500);}else{throw new Error(result.message||"Error en el servidor.");}}).catch(error=>{console.error("Error en el procesamiento final:",error);alert("Ocurrió un error al procesar el envío: "+error.message);progressContainer.classList.add('hidden');btn.classList.remove('hidden');});}
        function showConfirmationLog(){const logContainer=document.getElementById('confirmation-log');const localDate=new Date(submissionData.submissionTimestamp).toLocaleString('es-ES');let logHTML=`<p><strong>Fecha y Hora:</strong> ${localDate}</p><p><strong>NIF/CIF:</strong> ${submissionData.nif}</p>`;const observaciones=submissionData.observaciones;if(observaciones){logHTML+=`<p class="mt-2"><strong>Observaciones:</strong> ${observaciones}</p>`;}Object.keys(submissionData.files).forEach(fieldId=>{const files=submissionData.files[fieldId];if(files.length>0){const titleInfo = idToTitleMap[fieldId]; const title = titleInfo ? `${titleInfo.area} > ${titleInfo.subarea}` : fieldId;logHTML+=`<p class="mt-2"><strong>${title} Enviadas:</strong> ${files.map(f=>f.name).join(', ')}</p>`;}});logContainer.innerHTML=logHTML;}
        function downloadReceipt(){if(generatedPdfDoc){generatedPdfDoc.save(`Justificante-${submissionData.nif}-${submissionData.submissionTimestamp.slice(0,10)}.pdf`);}else{alert("El justificante no se ha generado todavía.");}}
    </script>
</body>
</html>
